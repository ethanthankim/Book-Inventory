{"ast":null,"code":"var _jsxFileName = \"/Users/ethankim/Documents/GitHub/Book-Inventory/client/src/Components/AddBookForm.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport '../App.css';\nimport axios from 'axios';\nimport dayjs from 'dayjs';\nimport TextInput from './TextInput';\nimport SelectInput from './SelectInput';\nimport DateInput from './DateInput';\nimport Button from '@mui/material/Button';\nimport Box from '@mui/material/Box';\nimport { Typography } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddBookForm = () => {\n  _s();\n  const path = 'http://localhost:5001';\n  const [book, setBook] = useState({\n    title: '',\n    author: '',\n    genre: '',\n    date: '',\n    isbn: ''\n  });\n  const [genres, setGenres] = useState([]);\n  const [message, setMessage] = useState('');\n  const [error, setError] = useState(false);\n\n  /* API Calls */\n  useEffect(() => {\n    const fetchGenres = async () => {\n      try {\n        const response = await axios.get(`${path}/genres`);\n        const genreArray = response.data.map(item => item.Genre);\n        setGenres(genreArray);\n      } catch (error) {\n        console.error('Error fetching genres:', error);\n      }\n    };\n    fetchGenres();\n  }, []);\n  const addBook = async () => {\n    try {\n      const response = await axios.post(`${path}/addBook`, {\n        title: book.title,\n        author: book.author,\n        genre: book.genre,\n        publication_date: book.date,\n        isbn: book.isbn\n      });\n      setMessage(response.data);\n      setError(false);\n      console.log('Book added successfully:', response.data);\n      clearInputs();\n    } catch (error) {\n      console.error('Error adding book:', error);\n      setMessage('Failed to add Book');\n      setError(true);\n    }\n  };\n\n  /* Handler Functions */\n\n  const handleSubmit = e => {\n    // e.preventDefault();\n    console.log('Submitted', book);\n    addBook();\n  };\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    console.log(name, value, e);\n    setBook({\n      ...book,\n      [name]: value\n    });\n  };\n  const handleSelect = e => {\n    setBook({\n      ...book,\n      genre: e.target.value\n    });\n  };\n  const handleDate = date => {\n    const formattedDate = dayjs(date.$d).format('YYYY-MM-DD');\n    setBook({\n      ...book,\n      date: formattedDate\n    });\n  };\n  const clearInputs = () => {\n    setBook({\n      title: '',\n      author: '',\n      genre: '',\n      date: '',\n      isbn: ''\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      component: \"form\",\n      autoComplete: \"off\",\n      noValidate: true,\n      onSubmit: handleSubmit,\n      className: \"inputs-bar\",\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        className: \"inputs\",\n        children: [/*#__PURE__*/_jsxDEV(TextInput, {\n          name: \"title\",\n          label: \"Title\",\n          required: \"true\",\n          change: handleChange,\n          value: book.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n          name: \"author\",\n          label: \"Author\",\n          required: \"true\",\n          change: handleChange,\n          value: book.author\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(SelectInput, {\n          options: genres,\n          label: \"Genre\",\n          value: book.genre,\n          change: handleSelect\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DateInput, {\n          change: handleDate,\n          required: \"true\",\n          label: \"Publication Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n          name: \"isbn\",\n          label: \"ISBN\",\n          required: \"true\",\n          change: handleChange,\n          value: book.isbn\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        className: \"inputs\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"contained\",\n          children: \"Add Book\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: clearInputs,\n          variant: \"outlined\",\n          children: \"Clear\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }, this), message && /*#__PURE__*/_jsxDEV(Typography, {\n        color: error ? 'error' : 'success',\n        mt: 2,\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 9\n  }, this);\n};\n_s(AddBookForm, \"b/q5xlT8v4roVd0JnSMV0adP1eI=\");\n_c = AddBookForm;\nexport default AddBookForm;\nvar _c;\n$RefreshReg$(_c, \"AddBookForm\");","map":{"version":3,"names":["React","useEffect","useState","axios","dayjs","TextInput","SelectInput","DateInput","Button","Box","Typography","jsxDEV","_jsxDEV","AddBookForm","_s","path","book","setBook","title","author","genre","date","isbn","genres","setGenres","message","setMessage","error","setError","fetchGenres","response","get","genreArray","data","map","item","Genre","console","addBook","post","publication_date","log","clearInputs","handleSubmit","e","handleChange","name","value","target","handleSelect","handleDate","formattedDate","$d","format","children","component","autoComplete","noValidate","onSubmit","className","label","required","change","fileName","_jsxFileName","lineNumber","columnNumber","options","type","variant","onClick","color","mt","_c","$RefreshReg$"],"sources":["/Users/ethankim/Documents/GitHub/Book-Inventory/client/src/Components/AddBookForm.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport '../App.css';\nimport axios from 'axios';\nimport dayjs from 'dayjs';\n\nimport TextInput from './TextInput';\nimport SelectInput from './SelectInput';\nimport DateInput from './DateInput';\n\nimport Button from '@mui/material/Button';\nimport Box from '@mui/material/Box';\nimport { Typography } from '@mui/material';\n\n\nconst AddBookForm = () => {\n    const path = 'http://localhost:5001'\n    const [book, setBook] = useState({\n        title:'',\n        author:'',\n        genre:'',\n        date:'',\n        isbn:''\n    });\n    const [genres, setGenres] = useState([]);\n    const [message, setMessage] = useState('');\n    const [error, setError] = useState(false);\n\n    /* API Calls */\n    useEffect(() => {\n        const fetchGenres = async () => {\n            try {\n                const response = await axios.get(`${path}/genres`);\n                const genreArray = response.data.map((item) => item.Genre);\n                setGenres(genreArray);\n            } catch (error) {\n                console.error('Error fetching genres:', error);\n            }\n        };\n        fetchGenres();\n    }, []);\n    const addBook = async () => {\n        try {\n            const response = await axios.post(`${path}/addBook`, {\n                title: book.title,\n                author: book.author,\n                genre: book.genre,\n                publication_date: book.date,\n                isbn: book.isbn\n            });\n            setMessage(response.data);\n            setError(false);\n            console.log('Book added successfully:', response.data);\n            clearInputs();\n        } catch (error) {\n            console.error('Error adding book:', error);\n            setMessage('Failed to add Book');\n            setError(true);\n        }\n    };\n\n    /* Handler Functions */\n\n    const handleSubmit = (e) => {\n        // e.preventDefault();\n        console.log('Submitted', book);\n        addBook();\n    }\n    const handleChange = (e) => {\n        const {name, value} = e.target\n        console.log(name, value, e);\n        setBook({\n            ...book,\n            [name]: value\n        })\n    };\n    const handleSelect = (e) => {\n        setBook({\n            ...book,\n            genre: e.target.value\n        })\n    };\n    const handleDate = (date) => {\n        const formattedDate = dayjs(date.$d).format('YYYY-MM-DD');\n        setBook({\n            ...book,\n            date: formattedDate\n        })\n    };\n    const clearInputs = () => {\n        setBook({\n            title:'',\n            author:'',\n            genre:'',\n            date:'',\n            isbn:''\n        })\n    }\n    return (\n        <div>\n            <Box\n                component='form'\n                autoComplete='off'\n                noValidate\n                onSubmit={handleSubmit}\n                className='inputs-bar'\n            >\n                <Box className='inputs'>\n                    <TextInput\n                        name='title' \n                        label='Title'\n                        required='true'\n                        change={handleChange}\n                        value={book.title}/>\n                    <TextInput\n                        name='author' \n                        label='Author'\n                        required='true'\n                        change={handleChange}\n                        value={book.author}/>\n                    <SelectInput\n                        options={genres}\n                        label='Genre'\n                        value={book.genre}\n                        change={handleSelect} />\n                    <DateInput\n                        change={handleDate}\n                        required='true'\n                        label='Publication Date' />\n                    <TextInput\n                        name='isbn'\n                        label='ISBN'\n                        required='true'\n                        change={handleChange}\n                        value={book.isbn} />\n                </Box>\n                <Box className='inputs'>\n                    <Button type='submit' variant='contained'>\n                        Add Book\n                    </Button>\n                    <Button onClick={clearInputs} variant='outlined'>\n                        Clear\n                    </Button>\n                </Box>\n                {\n                    message && (\n                        <Typography color={error ? 'error' : 'success'} mt={2}>\n                            {message}\n                        </Typography>\n                    )\n                }\n            </Box>\n        </div>\n    );\n};\nexport default AddBookForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}